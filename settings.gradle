pluginManagement {
    apply from: "gradle/repositories.gradle"
    repositories {
        maven { url projectRepositories.mavenCentral }
        maven { url projectRepositories.google }
        maven { url projectRepositories.gradlePlugins }
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url projectRepositories.mavenCentral }
        maven { url projectRepositories.google }
        maven { url projectRepositories.jitpack }
        maven {
            url projectRepositories.kotlinxHtml
            content { includeModule "org.jetbrains.kotlinx", "kotlinx-html-jvm" }
        }
    }
}

include ":app"

include ":presentation:features:main"
include ":presentation:features:gallery"
include ":presentation:features:home"
include ":presentation:features:schedule"
include ":presentation:features:services"
include ":presentation:features:settings"
include ":presentation:tools:thememanager"
include ":presentation:ui:components"
include ":presentation:ui:extensions"
include ":presentation:ui:theme"

include ":services:events"
include ":services:galleries"
include ":services:invitations"
include ":services:settings"

include ":repositories:events"
include ":repositories:galleries"
include ":repositories:invitations"
include ":repositories:settings"

include ":libraries:analytics"
include ":libraries:crashlytics"
include ":libraries:intent"
include ":libraries:messaging"
include ":libraries:protodatastore"
include ":libraries:realtimedatabase"
include ":libraries:result"
include ":libraries:remotestorage"

include ":common:mvvm"
include ":common:splash"

include ":core:appinfo"
include ":core:coroutines"
include ":core:database"
include ":core:datetime"
include ":core:osinfo"
include ":core:preferences"

apply from: new File(settingsDir, "gradle/buildCache.gradle")

enableFeaturePreview("TYPESAFE_PROJECT_ACCESSORS")
