include:
  - local: ".gitlab-ci-variables.yml"

stages:
  - test
  - build

.gradle-cache:
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - .gradle/
    policy:
      - pull

buildImage:
  image: docker:20.10.12
  services:
    - docker:20.10.16-dind
  tags:
    - docker
  before_script:
    - export GRADLE_DISTRIBUTION_URL="$(cat gradle/wrapper/gradle-wrapper.properties | grep 'distributionUrl' | cut -f 2 -d '=' | tr -d '\')"
    - echo "Using gradle distribution url $GRADLE_DISTRIBUTION_URL"
    - export GRADLE_VERSION="$(echo $GRADLE_DISTRIBUTION_URL | cut -f 2 -d '-')"
    - echo "Using gradle version $GRADLE_VERSION"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:latest
      --build-arg ANDROID_SDK_VERSION=$ANDROID_SDK_VERSION
      --build-arg BUILDTOOLS_VERSION=$BUILDTOOLS_VERSION
      --build-arg GRADLE_VERSION=$GRADLE_VERSION
      --build-arg GRADLE_DISTRIBUTION_URL=$GRADLE_DISTRIBUTION_URL
      .
    - docker push $CI_REGISTRY_IMAGE:latest
  rules:
    - changes:
        - .gitlab-ci-variables.yml
        - Dockerfile
        - gradle/wrapper/gradle-wrapper.properties

setupGradle:
  image: registry.gitlab.com/kopacz/hejwesele:latest
  tags:
    - docker
  extends: .gradle-cache
  cache:
    policy: pull-push
  script:
    - gradle -v

# ---DEBUG---

testDebug:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testDebug
  only:
    - /^feat.*$/
    - /^fix.*$/

lintDebug:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: test
  script:
    - ./gradlew -Pci --console=plain ktlint -PbuildDir=lint
  only:
    - /^feat.*$/
    - /^fix.*$/

assembleDebug:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: build
  script:
    - ./gradlew assembleDebug
  only:
    - /^feat.*$/
    - /^fix.*$/

# ---QA---

testQa:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testQa
  only:
    - dev

lintQa:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: test
  script:
    - ./gradlew -Pci --console=plain ktlint -PbuildDir=lint
  only:
    - dev

assembleQa:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: build
  script:
    - export FIREBASE_DIR="$HOME/.config/firebase"
    - echo $HOME
    - install -d $FIREBASE_DIR
    - echo ${FIREBASE_SERVICE_KEY} > "$FIREBASE_DIR/service_key.json"
    - >
      ./gradlew -PserviceKey="$FIREBASE_DIR/service_key.json" assembleQa appDistributionUploadQa
  only:
    - dev
  environment:
    name: qa
    deployment_tier: staging
    url: https://console.firebase.google.com/project/hejwesele-test/appdistribution/app/android:com.hejwesele.qa/releases
  artifacts:
    paths:
      - app/build/outputs/apk/**/*.apk

# ---RELEASE---

testRelease:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testRelease
  only:
    - main

lintRelease:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: test
  script:
    - ./gradlew -Pci --console=plain ktlint -PbuildDir=lint
  only:
    - main

assembleRelease:
  image: registry.gitlab.com/kopacz/hejwesele
  tags:
    - docker
  stage: build
  script:
    - ./gradlew bundleRelease assembleRelease
  only:
    - main
  artifacts:
    paths:
      - app/build/outputs/
