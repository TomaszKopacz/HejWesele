plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.kapt"
    id "com.google.dagger.hilt.android"
    alias libs.plugins.googleServices
    alias libs.plugins.firebase.appDistribution
    alias libs.plugins.firebase.crashlytics
//    alias libs.plugins.firebase.perf
    alias libs.plugins.playPublisher
    alias libs.plugins.licensee
    alias libs.plugins.ksp
}

apply from: "../gradle/licenses.gradle"

android {
    namespace "com.hejwesele"
    defaultConfig {
        applicationId "com.hejwesele"
        resValue "string", "app_name", "Hej Wesele"
        versionCode Integer.valueOf(System.getenv().get("GITLAB_BUILD_NUMBER") ?: projectVersionCode)
        versionName projectVersionName + " (" + versionCode + ")"

        testInstrumentationRunner "com.hejwesele.android.HiltTestRunner"
        testInstrumentationRunnerArguments clearPackageData: "true"
    }

    signingConfigs {
        qaConfig {
            storeFile file("certs/qa.keystore")
            storePassword "storePassword"
            keyAlias "keyAlias"
            keyPassword "keyPassword"
        }
        releaseConfig {
            storeFile file("certs/release.keystore")
            storePassword System.getenv().get("RELEASE_STORE_PASSWORD") ?: ""
            keyAlias System.getenv().get("RELEASE_KEY_ALIAS") ?: ""
            keyPassword System.getenv().get("RELEASE_KEY_PASSWORD") ?: ""
        }
    }

    buildFeatures {
        buildConfig true
        resValues true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidx.compose.compiler.get()
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Hej Wesele Debug"
            debuggable true
            minifyEnabled false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        qa {
            applicationIdSuffix ".qa"
            resValue "string", "app_name", "Hej Wesele QA"
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            matchingFallbacks = ["release"]
            signingConfig signingConfigs.qaConfig
            firebaseAppDistribution {
                appId "1:131141411183:android:6573114c8bf775ed0b489a"
                serviceCredentialsFile findProperty("serviceKey") ?: ""
                releaseNotes generatedReleaseNotes
                groups "qa"
            }
        }
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.releaseConfig
            play {
                serviceAccountCredentials.set(file(findProperty("playPublisherServiceKey") ?: "playPublisherServiceKey.json"))
                releaseStatus.set(com.github.triplet.gradle.androidpublisher.ReleaseStatus.DRAFT)
                resolutionStrategy.set(com.github.triplet.gradle.androidpublisher.ResolutionStrategy.IGNORE)
                track.set("internal")
            }
        }
    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }

    ksp {
        arg("compose-destinations.moduleName", "app")
        arg("compose-destinations.mode", "destinations")
    }

    packagingOptions {
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

dependencies {
    implementation projects.presentation.features.gallery
    implementation projects.presentation.features.home
    implementation projects.presentation.features.login
    implementation projects.presentation.features.main
    implementation projects.presentation.features.schedule
    implementation projects.presentation.features.services
    implementation projects.presentation.features.settings
    implementation projects.presentation.tools.splash
    implementation projects.presentation.tools.thememanager
    implementation projects.presentation.ui.theme

    implementation projects.services.events
    implementation projects.services.galleries
    implementation projects.services.invitations
    implementation projects.services.settings

    implementation projects.repositories.events
    implementation projects.repositories.settings

    implementation projects.libraries.analytics
    implementation projects.libraries.appinfo
    implementation projects.libraries.crashlytics
    implementation projects.libraries.mvvm

    implementation libs.androidx.compose.foundation
    implementation libs.androidx.activity.compose
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.accompanist.navigation.animation
    implementation libs.accompanist.navigation.material
    implementation libs.accompanist.systemuicontroller
    implementation libs.imagecropper.compose

    implementation libs.hilt.android
    kapt libs.hilt.compiler

    implementation libs.destinations.core
    ksp libs.destinations.ksp

    implementation libs.logcat
    debugImplementation libs.leakcanary
}
